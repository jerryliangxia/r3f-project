/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";

export default function SpidHead(props) {
  const { nodes, materials } = useGLTF("/minifbspidhead.glb");
  return (
    <group
      {...props}
      dispose={null}
      position={props.position}
      rotation-y={props.rotationY}
      scale={props.scale}
    >
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.S_OUT.geometry}
        material={materials.BLACK_MAT}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.S_INNER.geometry}
        material={materials.BLACK_MAT}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.WEBS.geometry}
        material={materials.BLACK_MAT}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.EYES.geometry}
        material={materials.EYES}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane.geometry}
        material={materials.MASK_MAT}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane_1.geometry}
        material={materials.Brown}
      />
    </group>
  );
}

useGLTF.preload("/minifbspidhead.glb");
