/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useState } from "react";
import { useGLTF } from "@react-three/drei";
import { Select } from "@react-three/postprocessing";
import { useFrame } from "@react-three/fiber";

export default function QuestionMark(props) {
  const { nodes, materials } = useGLTF("/question_mark.glb");
  const groupRef = useRef();

  useFrame((state, delta) => {
    if (groupRef.current) {
      const rotationSpeed = (2 * Math.PI) / 6; // Full rotation in 6 seconds
      groupRef.current.rotation.y += rotationSpeed * delta;
    }
  });

  const [enabled, setHoverEnabled] = useState(false);
  let timeoutId = null;

  const handlePointerOver = (event) => {
    event.stopPropagation();
    if (props.isActualComputerClicked) return;
    if (timeoutId) {
      clearTimeout(timeoutId);
    }
    document.body.style.cursor = "pointer";
    setHoverEnabled(true);
  };

  const handlePointerOut = () => {
    if (timeoutId) {
      clearTimeout(timeoutId);
    }
    timeoutId = setTimeout(() => {
      document.body.style.cursor = "default";
      setHoverEnabled(false);
    }, 10); // delay in milliseconds
  };

  return (
    <Select
      enabled={
        enabled &&
        !props.isActualComputerClicked &&
        !props.isActualWorkbenchClicked
      }
    >
      <group
        ref={groupRef}
        {...props}
        dispose={null}
        onPointerOver={handlePointerOver}
        onPointerOut={handlePointerOut}
      >
        <mesh
          geometry={nodes.Circle.geometry}
          material={materials["Question Mark Background"]}
        />
        <mesh
          geometry={nodes.Question_Mark_base.geometry}
          material={materials.Black}
          position={[0, -1.259, 0]}
        />
        <mesh
          geometry={nodes.Plane.geometry}
          material={materials.Black}
          position={[-0.102, -0.264, 0.206]}
        />
        <mesh
          geometry={nodes.Question_Mark_base001.geometry}
          material={materials.Black}
          position={[0.024, -1.259, -0.273]}
          rotation={[-Math.PI, 0, 0]}
          scale={-1}
        />
        <mesh
          geometry={nodes.Plane001.geometry}
          material={materials.Black}
          position={[0.126, -0.264, -0.067]}
          rotation={[-Math.PI, 0, 0]}
          scale={-1}
        />
      </group>
    </Select>
  );
}

useGLTF.preload("/question_mark.glb");
